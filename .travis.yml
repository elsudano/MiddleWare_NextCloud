language: go

# Only the last two Go releases are supported by the Go team with security
# updates. Any versions older than that should be considered deprecated.
# Don't bother testing with them. tip builds your code with the latest
# development version of Go. This can warn you that your code will break
# in the next version of Go. Don't worry! Later we declare that test runs
# are allowed to fail on Go tip.
go:
  - 1.9
  - tip

# Skip the install step. Don't `go get` dependencies. Only build with the
# code in vendor/
install: true

matrix:
  # It's ok if our code fails on unstable development versions of Go.
  allow_failures:
    - go: tip
  # Don't wait for tip tests to finish. Mark the test run green if the
  # tests pass on the stable versions of Go.
  fast_finish: true

# Don't email me the results of the test runs.
notifications:
  email: false

# Esta variable se utiliza para las dependencias locales
#go_import_path:
#   - github.com/gorilla/mux

# Anything in before_script that returns a nonzero exit code will
# flunk the build and immediately stop. It's sorta like having
# set -e enabled in bash.
before_script:
  - go vet main.go
  - go vet ./webservice/

# script always run to completion (set +e). All of these code checks are must haves
# in a modern Go project.
script:
  - go test ./...
  #- test -z $(gofmt -s -l $GO_FILES)         # Fail if a .go file hasn't been formatted with gofmt

after_script:
  - curl -k --header "cache-control=no-cache" --header "content-type=application/xml" --header 'charset=utf-8' -u $USER_NEXTCLOUD:$PASS_NEXTCLOUD $URL_BASE -X PROPFIND
